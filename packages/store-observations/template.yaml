AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An lambda application that communicates with the Tempest API, and stores the observations to S3.
Resources:
  TempestS3AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Tempest weather app access to s3 resources"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::weather-tempest-records"
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource: "*"
          - Action: s3:PutObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::weather-tempest-records/*"
  TempestLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs20.x
      CodeUri: function/.
      Description: Call the Tempest weather API for observations and store the readings in S3.
      MemorySize: 1024
      Timeout: 60
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - !Ref TempestS3AccessPolicy
      Tracing: Active
      Layers:
        - !Ref TempestLambdaDependencies
  TempestLambdaDependencies:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: tempest-weather-store-lib
      Description: Dependencies for the Tempest weather observations STORE app.
      ContentUri: ../../lib/.
      CompatibleRuntimes:
        - nodejs20.x
  TempestWeatherSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Invoke the Tempest weather app every day at 4am UTC+0"
      ScheduleExpression: "cron(0 4 * * ? *)" # 4am UTC+0 (UK offset is UTC+1)
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "TempestLambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "TempestLambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "TempestWeatherSchedule"
          - "Arn"
